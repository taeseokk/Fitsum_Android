// Generated by view binder compiler. Do not edit!
package com.miguelrochefort.fitnesscamera.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.miguelrochefort.fitnesscamera.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginFragBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnFindId;

  @NonNull
  public final Button btnFindPw;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final EditText etId;

  @NonNull
  public final EditText etPasswd;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final TextView textFindId;

  private LoginFragBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnFindId,
      @NonNull Button btnFindPw, @NonNull Button btnLogin, @NonNull EditText etId,
      @NonNull EditText etPasswd, @NonNull ConstraintLayout linearLayout,
      @NonNull LinearLayout linearLayout2, @NonNull TextView textFindId) {
    this.rootView = rootView;
    this.btnFindId = btnFindId;
    this.btnFindPw = btnFindPw;
    this.btnLogin = btnLogin;
    this.etId = etId;
    this.etPasswd = etPasswd;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.textFindId = textFindId;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.login_frag, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginFragBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_find_id;
      Button btnFindId = ViewBindings.findChildViewById(rootView, id);
      if (btnFindId == null) {
        break missingId;
      }

      id = R.id.btn_find_pw;
      Button btnFindPw = ViewBindings.findChildViewById(rootView, id);
      if (btnFindPw == null) {
        break missingId;
      }

      id = R.id.btn_login;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.et_id;
      EditText etId = ViewBindings.findChildViewById(rootView, id);
      if (etId == null) {
        break missingId;
      }

      id = R.id.et_passwd;
      EditText etPasswd = ViewBindings.findChildViewById(rootView, id);
      if (etPasswd == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ConstraintLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.text_find_id;
      TextView textFindId = ViewBindings.findChildViewById(rootView, id);
      if (textFindId == null) {
        break missingId;
      }

      return new LoginFragBinding((ConstraintLayout) rootView, btnFindId, btnFindPw, btnLogin, etId,
          etPasswd, linearLayout, linearLayout2, textFindId);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
